#!/bin/sh

ERROR()
{
  echo error: $*
  exit 1
}

USAGE()
{
  [ -z "$1" ] || echo error: $*
  echo usage: $(basename "$0") '<src> <dest>'
  echo '       --help           -h         this message'
  echo '       --verbose        -v         more messages'
  echo '       --yes            -y         answer yes to all prompts'
  exit 1
}

# main program
verbose=no
prompt=yes

debug=no

getopt=/usr/local/bin/getopt
[ -x "${getopt}" ] || getopt=getopt
args=$(${getopt} -o hvy --long=help,verbose,yes,debug -- "$@") ||exit 1

# replace the arguments with the parsed values
eval set -- "${args}"

while :
do
  case "$1" in
    (-v|--verbose)
      verbose=yes
      ;;

    (-y|--yes)
      prompt=no
      ;;

    (--debug)
      debug=yes
      ;;

    (--)
      shift
      break
      ;;

    (-h|--help)
      USAGE
      ;;

    (*)
      USAGE invalid option: $1
      ;;
  esac
  shift
done

# verify arguments
[ -z "${prompt}" ] && USAGE prompt is not set
#[ $# -eq 0 ] && USAGE missing arguments
[ $# -ne 2 ] && USAGE exactly two arguments are required

[ X"${debug}" = X"yes" ] && set -x

# extract arguments
src="$1"; shift
dest="$1"; shift

temp=$(mktemp --tmpdir patchit-XXXXX)

trap 'rm -f "${temp}"' EXIT INT

GetYN()
{
  while :
  do
    read -p "$* [y/n] ? " yorn junk
    case "${yorn}" in
      [yY]|[yY][eE][sS])
        return 0
        ;;
      [nN]|[nN][oO])
        return 1
        ;;
      *)
        echo Please answer yes or no
        ;;
      esac
    done
}

apply()
{
  patch "${dest}" "${temp}"
}

main()
{
  diff -uw "${dest}" "${src}" > "${temp}"

  case "${prompt}" in
    [yY]|[yY][eE][sS])
      if [ -s "${temp}" ]
      then
        ${PAGER:-less} "${temp}"
        if GetYN Apply patch to ${dest}
        then
          apply
        fi
      else
        echo No differences between files
      fi
      ;;
    *)
      apply
      ;;
  esac
}

main

#!/bin/sh
# ping all addresses in a /24 network

ERROR() {
  printf 'error: '
  printf "${@}"
  printf '\n'
  exit 1
}

VERBOSE() {
  [ X"${verbose}" = X"no" ] && return 0
  printf "${@}"
  printf '\n'
}

USAGE() {
  if [ -n "${1}" ]
  then
    printf 'error: '
    printf "${@}"
    printf '\n'
  fi
  echo usage: "${0##*/}" '<options> <ip-net-24>...'
  echo '       --help                 -h            this message'
  echo '       --verbose              -v            more messages'
  echo '       --debug                -D            show debug information'
  echo '       <ip-net-24>                          e.g. 192.168.0'
  exit 1
}


# main program
verbose=no
debug=no

# parse options
while getopts :hvD-: option
do
  # convert long options
  if [ X"${option}" = X"-" ]
  then
    option="${OPTARG%%=*}"
    OPTARG="${OPTARG#${option}}"
    OPTARG="${OPTARG#=}"
  fi
  case "${option}" in
    (v|verbose)
      verbose=yes
      ;;

    (--)
      break
      ;;

    (D|debug)
      debug=yes
      ;;

    (h|help)
      USAGE
      ;;

    ('?')
      USAGE 'invalid option: -%s' "${OPTARG}"
      ;;

    (*)
      USAGE 'invalid option: --%s' "${option}"
      ;;
  esac
done

shift $((OPTIND - 1))

# verify arguments
#[ ${#} -ne 0 ] && USAGE 'extraneous arguments: %s' "${*}"
[ ${#} -eq 0 ] && USAGE 'missing arguments'

# enable debugging
[ X"${debug}" = X"yes" ] && set -x

# detect OS
case $(uname -s) in
  (Linux)
    ping_options='-q -c 1 -w 2'
    ;;
  (*)
    ping_options='-q -c 1 -t 2'
    ;;
esac

for net in "${@}"
do
  echo Mapping ${net}
  i=1
  while [ ${i} -lt 255 ]
  do
    ping ${ping_options} "${net}.${i}" >/dev/null 2>&1 &
    i=$((${i} + 1))
  done
  sleep 3
  arp -an | awk "/\\(${net}.*at *..:/"'{print $2 "\t" $4}' | sort -k1 -V
done

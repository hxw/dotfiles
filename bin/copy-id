#!/bin/sh
# copy an ssh id to a host

ERROR()
{
  printf 'error: '
  printf "$@"
  printf '\n'
  exit 1
}

USAGE()
{
  if [ -n "$1" ]
  then
    printf 'error: '
    printf "$@"
    printf '\n'
  fi
  echo usage: $(basename "$0") '<options> <host>'
  echo '       --help           -h         this message'
  echo '       --verbose        -v         more messages'
  echo '       --debug          -D         show debug information'
  exit 1
}

VERBOSE() {
  [ X"${verbose}" = X"no" ] && return 0
  printf "$@"
  printf '\n'
}

# main program
verbose=no
debug=no

getopt=
case "$(uname)" in
  (FreeBSD|DragonFly)
    getopt=/usr/local/bin/getopt
    ;;
  (NetBSD)
    getopt=/usr/pkg/bin/getopt
    ;;
  (OpenBSD)
    getopt=/usr/local/bin/gnugetopt
    ;;
  (Darwin)
    getopt=/usr/local/opt/gnu-getopt/bin/getopt
    ;;
  (Linux)
    getopt=/usr/bin/getopt
    ;;
  (*)
    ERROR 'OS: %s is not supported' "$(uname)"
    ;;
esac
[ -x "${getopt}" ] || ERROR 'getopt: "%s" is not executable or not installed' "${getopt}"

args=$(${getopt} -o hvrnu:D --long=help,verbose,revise,no-update,use:,debug -- "$@") || exit 1

# replace the arguments with the parsed values
eval set -- "${args}"

while :
do
  case "$1" in
    (-v|--verbose)
      verbose=yes
      ;;

    (-D|--debug)
      debug=yes
      ;;

    (--)
      shift
      break
      ;;

    (-h|--help)
      USAGE
      ;;

    (*)
      USAGE 'invalid option: %s' "$1"
      ;;
  esac
  shift
done

# verify arguments
[ $# -ne 1 ] && USAGE 'exactly one argument is required'
host="${1}"

# enable debuging
[ X"${debug}" = X"yes" ] && set -x

# ssh id name
ssh_id="${HOME}/.ssh/${host}_id_ed25519.pub"

[ -f "${ssh_id}" ] || USAGE 'identity for host is missing: "%s"' "${ssh_id}"

opts=''
OPT() {
  opts="${opts} $*"
}

OPT -i "${ssh_id}"
OPT -o PasswordAuthentication=yes
OPT -o PubkeyAuthentication=no
OPT -o PreferredAuthentications=keyboard-interactive,password
[ X"${verbose}" = X"yes" ] && OPT -v

ssh-copy-id ${opts} "${host}"

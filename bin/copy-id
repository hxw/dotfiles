#!/bin/sh
# copy an ssh id to a host

ERROR()
{
  printf 'error: '
  printf "${@}"
  printf '\n'
  exit 1
}

VERBOSE() {
  [ X"${verbose}" = X"no" ] && return 0
  printf "${@}"
  printf '\n'
}

USAGE()
{
  if [ -n "${1}" ]
  then
    printf 'error: '
    printf "${@}"
    printf '\n'
  fi
  echo usage: "${0##*/}" '<options> <host>'
  echo '       --help                 -h            this message'
  echo '       --verbose              -v            more messages'
  echo '       --debug                -D            show debug information'
  exit 1
}


# main program
verbose=no
debug=no

# parse options
while getopts :hvD-: option
do
  # convert long options
  if [ X"${option}" = X"-" ]
  then
    option="${OPTARG%%=*}"
    OPTARG="${OPTARG#${option}}"
    OPTARG="${OPTARG#=}"
  fi
  case "${option}" in
    (v|verbose)
      verbose=yes
      ;;

    (--)
      break
      ;;

    (D|debug)
      debug=yes
      ;;

    (h|help)
      USAGE
      ;;

    ('?')
      USAGE 'invalid option: -%s' "${OPTARG}"
      ;;

    (*)
      USAGE 'invalid option: --%s' "${option}"
      ;;
  esac
done

shift $((OPTIND - 1))

# verify arguments
#[ ${#} -ne 0 ] && USAGE 'extraneous arguments: %s' "${*}"
[ ${#} -ne 1 ] && USAGE 'exactly one argument is required'
host="${1}"

# enable debuging
[ X"${debug}" = X"yes" ] && set -x

# ssh id name
ssh_id="${HOME}/.ssh/${host}_id_ed25519.pub"

[ -f "${ssh_id}" ] || USAGE 'identity for host is missing: "%s"' "${ssh_id}"

opts=''
OPT() {
  opts="${opts} $*"
}

OPT -i "${ssh_id}"
OPT -o PasswordAuthentication=yes
OPT -o PubkeyAuthentication=no
OPT -o PreferredAuthentications=keyboard-interactive,password
[ X"${verbose}" = X"yes" ] && OPT -v

ssh-copy-id ${opts} "${host}"

# .gitconfig

[user]
    # require repo to have local user config
    useConfigOnly = true

[push]
    default = simple

[pull]
    rebase = true

[alias]
    ci = commit --signoff
    co = checkout
    pr = pull --rebase
    prp = pull --rebase --prune
    pnp = !git pull --rebase && git push origin HEAD
    st = status
    br = !git -P branch
    praise = blame
    sp = stash pop
    sa = stash apply
    sc = stash clear
    ss = stash save
    sw = switch

    dw = diff --word-diff=color

    k = !gitk HEAD
    ka = !gitk --all

    # quickly clone a branch
    # clbr git@... branch [depth]
    clbr = !git clone --branch "${2:-master}" --depth "${3:-1}" "$1" "$(basename -s .git "$1")-${2:-master}" && :

    resign = !git rebase --exec 'git commit --amend --no-edit -n -S' -i "$1" && :

# graph of tree
# =============

    # log all; can supply optional line count e.g.: git la 10
    la = !export n=${1:-$(expr $(tput lines) - 5)} && git --no-pager log --graph --no-show-signature --color=always --pretty=format:'%C(bold red)%h%Creset %<(70,trunc)%s %C(bold green)%cd %C(bold cyan)%G? %C(bold ul blue)%aN%Creset %C(bold yellow)%D%Creset' --abbrev-commit --date='format:%F %T' --decorate=short --all --max-count=${n} | head -n ${n} && echo && :

    # log just HEAD; can supply optional line count e.g.: git ll 10
    ll = !export n=${1:-$(expr $(tput lines) - 5)} && git --no-pager log --graph --no-show-signature --color=always --pretty=format:'%C(bold red)%h%Creset %<(70,trunc)%s %C(bold green)%cd %C(bold cyan)%G? %C(bold ul blue)%aN%Creset %C(bold yellow)%D%Creset' --abbrev-commit --date='format:%F %T' --decorate=short --max-count=${n} HEAD | head -n ${n} && echo && :

    # 12 digit commit hashes for FreeBSD Makefiles
    lh = !export n=${1:-$(expr $(tput lines) - 5)} && git --no-pager log --graph --no-show-signature --color=always --pretty=format:'%C(bold red)%<(14,trunc)%H%Creset %<(70,trunc)%s %C(bold green)%cd %C(bold cyan)%G? %C(bold ul blue)%aN%Creset %C(bold yellow)%D%Creset' --abbrev-commit --date='format:%F %T' --decorate=short --max-count=${n} HEAD | head -n ${n} && echo && :

# git-svn commands
# ================

    up = svn rebase
    dc = svn dcommit

# handling a local transient branch
# =================================

# the intended sequence is:
#   git co master # if not already there
#   git pull      # update
#   git today     # create local today branch
#   while work
#     edit ${file}
#     git add ${file}
#     git ci
#   git k # see the state
#   git fetch
#   git rebase master
#   git tidy # more than once
#   git done

    today = checkout -b today
    tidy = rebase -i master
    done = rebase today master

# rewrite history
# ===============

   last = !git rebase -i HEAD~${1:-5} && :
   last10 = rebase -i HEAD~10
   last5 = rebase -i HEAD~5
   last2 = rebase -i HEAD~2
   last1 = rebase -i HEAD

   # and the last 10 commits will appear in your favourite $EDITOR. A sample excerpt:
   # pick 5c6eb73 Added repo.or.cz link
   # pick a311a64 Reordered analogies in "Work How You Want"
   # pick 100834f Added push target to Makefile

   # Then:
   # Remove commits by deleting lines.
   # Reorder commits by reordering lines.
   # Replace "pick" with "edit" to mark a commit for amending.
   # Replace "pick" with "squash" to merge a commit with the previous one.

   # If you marked a commit for editing, then run:
   amend = commit --amend

   # otherwise, run:
   cont = rebase --continue


# sending patches
# ===============

    fp = format-patch -C


[apply]
    whitespace = strip

[diff]
    color = auto
    renames = copy
    colorMovedWS = no
    wordRegex = .

[log]
    # arc diff --create does not handle signatures
    showSignature = false

[color]
    branch = auto
    diff = auto
    grep = auto
    interactive = auto
    status = auto

# Colours:  black, red, green, yellow, blue, magenta, cyan and white
# Attributes: bold, dim, ul, blink and reverse
# var = [attribute] foreground [background]

[color.branch]
    current = bold green
    local = bold yellow
    remote = bold red
    plain = white

[color.diff]
    #plain = white
    #meta = white
    frag = ul bold blue
    #func = white
    old = red
    new = bold green
    commit = yellow
    #whitespace = white

[color.grep]
    match = bold yellow

[color.interactive]
    prompt = bold cyan
    header = bold blue
    help = bold green
    error = bold red

[color.status]
    header = bold white
    added = bold yellow
    updated = bold green
    changed = bold red
    untracked = bold blue
    nobranch = bold magenta
    unmerged = bold cyan

[pager]
    color = true

[status]
    color = auto

[core]
@HAVE_HOME@    excludesfile = @HOME@.config/git/global-ignore
@HAVE_HOME@    attributesfile = @HOME@.config/git/global-attributes
#    autocrlf = input

[init]
    defaultBranch = main

[gpg.ssh]
@HAVE_HOME@    allowedSignersFile = @HOME@.config/git/allowed-signers

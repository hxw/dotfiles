# jail.conf

# the external network interface
$ext_if = "lagg0";
#$ext_if = "re0";

# jail location and naming
$pool = "zroot";
$j = "/jails";
path = "$j/$name";
host.hostname = "${name}.@DOMAIN@";

# basic setup
exec.clean;
exec.start = "sh /etc/rc";
exec.stop = "sh /etc/rc.shutdown";

# restrictions (override in individual jails)
children.max = 0;
enforce_statfs = 2;

# pre-mount certain file systems
mount.devfs;
mount.fdescfs;

# optional pre-mounts
# (copy to individual jail configuration as required)
#mount.procfs;
#mount.fstab = "$j/${name}.fstab";

# only enable these only for special jails (e.g., poudriere)
# (copy to individual jail configuration as required)
#allow.mount;
#allow.mount.devfs;
#allow.mount.fdescfs;
#allow.mount.fusefs;
#allow.mount.nullfs;
#allow.mount.procfs;
#allow.mount.linprocfs;
#allow.mount.linsysfs;
#allow.mount.tmpfs;
#allow.mount.zfs;

# some logging
exec.prestart = "logger trying to start jail $name...";
exec.poststart = "logger jail $name has started";
exec.prestop = "logger shutting down jail $name";
exec.poststop = "logger jail $name has shut down";
exec.consolelog = "/var/tmp/$name";

# use vnet and let DHCP update hostname
vnet;
allow.set_hostname = 1;
devfs_ruleset = "11"; # rule to unhide bpf for DHCP

# command to do epair bridging
$jib = "sh /usr/share/examples/jails/jib";


# individual jails
# ================

jail1 {
  vnet.interface = "e0b_$name";
  exec.prestart += "$jib addm $name $ext_if";
  exec.poststop += "$jib destroy $name";
}

# this jail uses poudriere so requires a delegated zfs dataset
phab {
  vnet.interface = "e0b_$name";
  exec.prestart += "$jib addm $name $ext_if";
  exec.poststop += "$jib destroy $name";

  $dataset = "${pool}${j}/$name/poudriere";

  # unjail, in case previous shutdown failed to complete
  exec.created += "zfs unjail $name $dataset || true";
  exec.created += "zfs jail $name $dataset";
  exec.start += "zfs mount -a";

  # at shutdown dismount delegated dataset and its children
  exec.stop += "zfs unmount -a || true";
  exec.poststop += "zfs unjail $name $dataset";

  mount.procfs;

  mount.fstab = "$j/${name}.fstab";

  enforce_statfs = 1;
  allow.mount;
  allow.mount.devfs;
  allow.mount.fdescfs;
  allow.mount.linprocfs;
  allow.mount.linsysfs;
  allow.mount.nullfs;
  allow.mount.procfs;
  allow.mount.tmpfs;
  allow.mount.zfs;

  children.max = 10;
}
